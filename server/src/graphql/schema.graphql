type Query {
  me: User
  user(id: ID!): User!
  users: [User!]!
  peak(id: ID!): Peak!
  chats: [Chat!]!
  messages(chatId: ID!): [Message!]!
  messagesByDate(chatId: ID!, dateFrom: String!, dateTo: String!): [Message!]!
}

type User {
  id: ID!
  email: String!
  displayName: String!
  city: String!
  contact: String!
}

type Mutation{
  updateUser(input: UpdateUserInput!): User!
  createChat(userAId: ID!, userBId: ID!): Chat!
  changeChatName(chatId: ID!, name: String!): Chat!
  sendMessage(chatId: ID!, userId:ID!, message: String!): Message!
}

input UpdateUserInput{
  id: ID!
  displayName: String!
  city: String!
  contact: String!
}

type Peak{
  id: ID!
  name: String!
  longitude: Float!
  latitude: Float!
  absHeight: Int!
  description: String!
  mountainRange: String!
}

type Chat{
  id: ID!
  name: String!
}

type Message{
  id: ID!
  user: User!
  chat: Chat!
  value: String!
  time: String!
}